import textwrap
from pathlib import Path

import pytest

from scripts import update_prompt_docs_summary as summary


@pytest.fixture()
def prompt_repo(tmp_path: Path) -> Path:
    repo = tmp_path / "repo"
    prompt_dir = repo / "docs" / "prompts"
    (prompt_dir / "b_nested").mkdir(parents=True)

    (prompt_dir / "a_prompt.md").write_text(
        textwrap.dedent(
            """
            ---
            slug: sample
            ---
            # Sample Prompt
            type: evergreen

            One-click: no

            This is the description for the sample prompt.
            """
        ).strip()
        + "\n",
        encoding="utf-8",
    )

    (prompt_dir / "b_nested" / "prompt.md").write_text(
        textwrap.dedent(
            """
            # Nested Prompt

            Content without metadata.
            """
        ).strip()
        + "\n",
        encoding="utf-8",
    )

    return repo


def test_main_generates_summary(tmp_path: Path, prompt_repo: Path) -> None:
    repo_list = tmp_path / "repos.txt"
    repo_list.write_text(str(prompt_repo) + "\n", encoding="utf-8")

    output_path = tmp_path / "summary.md"

    exit_code = summary.main(
        ["--repos-from", str(repo_list), "--out", str(output_path)]
    )

    assert exit_code == 0

    content = output_path.read_text(encoding="utf-8")
    expected = (
        "# Prompt documentation summary\n\n"
        "Generated by `scripts/update_prompt_docs_summary.py`.\n"
        "Update `dict/prompt-doc-repos.txt` to control which repositories "
        "appear.\n\n"
        "## repo\n\n"
        "- **Sample Prompt** (`evergreen`) — `docs/prompts/a_prompt.md`\n"
        "  This is the description for the sample prompt.\n\n"
        "- **Nested Prompt** (`unspecified`) — "
        "`docs/prompts/b_nested/prompt.md`\n"
        "  No description provided.\n"
    )
    assert content == expected
